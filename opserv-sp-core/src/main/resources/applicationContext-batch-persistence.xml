<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
							http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:annotation-config />
	
	<!-- Importing mutitenancy batch configurations -->
	<import resource="classpath:applicationContext-tenantBatch.xml" />
	
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />
	
	<aop:aspectj-autoproxy>
       <aop:include name="dbRouterAspect"/>
    </aop:aspectj-autoproxy>
    
	<bean id="atomikosTransactionManagerBatch" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
		<property name="forceShutdown" value="false" />
	</bean>

	<bean id="atomikosUserTransactionBatch" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="30000" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="atomikosTransactionManagerBatch" />
		<property name="userTransaction" ref="atomikosUserTransactionBatch" />
		<property name="allowCustomIsolationLevels" value="true" />
	</bean>
	  	
  	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />
	
	<bean id="genericDAO" class="com.cognizant.opserv.sp.core.dao.APPGenericDAOImpl" depends-on="emfForAPPDB">
		<property name="entityManagerFactory" ref="emfForAPPDB" />
	</bean>
	
	<!--EntityManagerFactory Configuration for APPDB starts -->
	<bean id="emfForAPPDB"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="APPPU" />
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence-batch.xml" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
				<property name="showSql" value="true" />
				<property name="generateDdl" value="false" />
			</bean>
		</property>
   		<property name="jpaProperties">
			<props>
				<prop key="hibernate.connection.charSet">utf8</prop>
				<prop key="hibernate.connection.characterEncoding">utf8</prop>
				<prop key="hibernate.connection.useUnicode">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="gisDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		     <property name="driverClass" value="${opserv.gis.db.ClsforName}" />
		    <property name="jdbcUrl" value="${opserv.gis.db.url}" />
		    <property name="user" value="${opserv.gis.db.username}" />
		    <property name="password" value="${opserv.gis.db.password}" />
		    <property name="initialPoolSize" value="${opserv.gis.db.initialPoolSize}" />
		    <property name="maxPoolSize" value="${opserv.gis.db.maxPoolSize}" />
		    <property name="minPoolSize" value="${opserv.gis.db.minPoolSize}" />
	</bean>
	<bean id="emfForGisDB"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="gisDataSource" />
		<property name="persistenceUnitName" value="GisPU" />
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence-batch.xml" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
				<property name="showSql" value="true" />
				<property name="generateDdl" value="false" />
			</bean>
		</property>
   		<property name="jpaProperties">
			<props>
				<prop key="hibernate.connection.charSet">utf8</prop>
				<prop key="hibernate.connection.characterEncoding">utf8</prop>
				<prop key="hibernate.connection.useUnicode">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="gisDAO" class="com.cognizant.opserv.sp.core.dao.GisDAOImpl">
		<property name="entityManagerFactory" ref="emfForGisDB" />
	</bean>
	<!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider -->
	<bean id="stringEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor"
		lazy-init="false">
		<property name="algorithm" value="PBEWithMD5AndDES" />
		<property name="password" value="password" />
	</bean>
	<bean id="hibernateStringEncryptor"
		class="org.jasypt.hibernate4.encryptor.HibernatePBEStringEncryptor">
		<property name="registeredName" value="hibernateStringEncryptor" />
		<property name="encryptor" ref="stringEncryptor" />
	</bean>
</beans>